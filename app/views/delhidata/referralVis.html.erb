<!DOCTYPE html>
<html>
<head>
  <meta charset='utf-8' />
  <title></title>
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons"
        rel="stylesheet">
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <style>
    #bottom_nav{

      bottom:0px;
      position: absolute;
      width: 100%;
      left:0px;

    }
    .input-container{
      position: absolute;
      z-index: 1;
      background: white;
      min-width: 326px;
      padding: 0.7rem;
      margin: 0.7rem;
    }
    .input-container .input-field{
      padding: 0 0.75rem;
    }
    body { margin:0; padding:0; }
    #map { position:absolute; top:0; bottom:0; width:100%; }
  </style>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.7/css/materialize.min.css">

  <!-- Compiled and minified JavaScript -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.7/js/materialize.min.js"></script>

  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.12.0/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.12.0/mapbox-gl.css' rel='stylesheet' />
</head>

<body>
<div id='map'></div>

<div class="input-container">
<div class="input-field col s6">
  <input placeholder="Dwarka Sector 16" id="home_address" type="text" class="validate">
  <label for="home_address">Home Address</label>
</div>

<div class="input-field col s6">
  <input placeholder="Cyber City" id="office_address" type="text" class="validate">
  <label for="office_address">Office Address</label>
</div>
</div>
<script>

  mapboxgl.accessToken = 'pk.eyJ1IjoiaGFyc2hwb2RkYXIyMSIsImEiOiJjaXJyazA4eHowaHJoZmFtNmxmMWt0Zm9zIn0.YgGE0-r-xVp1lXdJF1ryRg';
  var map = new mapboxgl.Map({
    container: 'map', // container id
    style: 'mapbox://styles/harshpoddar21/cis5eedvf001ohhmdp6rcu891', //hosted style id

  });


/*
  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/harshpoddar21/cis5eedvf001ohhmdp6rcu891'
  });
*/

  // Set the origin and destination for the direction and call the routing service

// Defining a polygon here instead of a polyline will connect the
// endpoints and fill the path.
// http://leafletjs.com/reference.html#polygon


      /*
       var directions = L.mapbox.directions({
       profile: 'mapbox.driving'
       });
       var route=routes[i];
       for (var j=0;j<route.length-1;j++){

       directions.setOrigin(L.latLng(route[j][0], route[j][1]));
       directions.setDestination(L.latLng(route[j+1][0], route[j+1][1]));
       directions.query();
       var directionsLayer = L.mapbox.directions.layer(directions).addTo(map);
       var directionsRoutesControl = L.mapbox.directions.routesControl('routes', directions)
       .addTo(map);

       }
       */
 var homeAd=null;
  var officeAd=null;
  var STATE={
"ROUTE_SELECTED":1,
    "ROUTE_NOT_SELECTED":0

  };
  bottomNav={};
  bottomNav.visibilityChanged=null;

function initAutoComplete() {
  var homeAddress = new google.maps.places.Autocomplete(document.getElementById("home_address"));

  var officeAddress = new google.maps.places.Autocomplete(document.getElementById("office_address"));
  homeAddress.addListener('place_changed', function () {

    var place = homeAddress.getPlace();
    if (!place.geometry) {

      return;
    }

    homeAd=place;

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
//    map.fitBounds(place.geometry.viewport);
    } else {
      //  map.setCenter(place.geometry.location);
      //map.setZoom(17);  // Why 17? Because it looks good.
    }

    console.log(place.geometry.location);

    fetchRouteDetails();
  });
  officeAddress.addListener('place_changed', function () {

    var place = officeAddress.getPlace();

    if (!place.geometry) {

      return;
    }
    officeAd=place;
    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
//    map.fitBounds(place.geometry.viewport);
    } else {
      //  map.setCenter(place.geometry.location);
      //map.setZoom(17);  // Why 17? Because it looks good.
    }

    fetchRouteDetails();
    console.log(place.geometry.location);

  });

}

  var mapFilter=["all"];
  var pickPointFilter=["all"];

    function fetchRouteDetails(){

      if (homeAd!=null && officeAd!=null){

        var poly = new google.maps.Polyline({
          strokeColor: '#000000',
          strokeOpacity: 1,
          strokeWeight: 3
        });
        var path=poly.getPath();
        path.push(homeAd.geometry.location);
        path.push(officeAd.geometry.location);

        var encodedPoints=google.maps.geometry.encoding.encodePath(path);

        $.ajax({
          url:'/suggest/getSlots?path='+encodedPoints+"&b2b="+0
        }).done(function(response){
          responseJson = response;

          var routeid=85;

          filterMapWithRouteId(routeid);
          showEntireRoute();

          bottomNav.visibilityChanged(STATE.ROUTE_SELECTED);

          if(response.route_type == 'Live_route' || response.route_type == 'suggested_route') {

            if (bottomNav!=undefined){

            }

          }
        });
      }
    }
  function filterMapWithRouteId(routeId){
    mapFilter=["==","routeid",routeId+""];

    pickPointFilter=["==","routeid",routeId];
    showEntireRoute();


  }
    function showEntireRoute(){
      map.setFilter("routes",mapFilter);
      map.setFilter("pick-up-points",pickPointFilter);
      hideAddressContainer();
      map.fitBounds([[
        homeAd.geometry.location.lng(),
        homeAd.geometry.location.lat()
      ], [
        officeAd.geometry.location.lng(),
        officeAd.geometry.location.lat()
      ]]);
    }
    function hideAddressContainer(){

      jQuery(".input-container").hide();

    }
    function showAddressContainer(){
      jQuery(".input-container").show();

    }
</script>

<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA2l0w6s0WszboqNqwFOIGPLKPgovaKnZk&amp;libraries=places,geometry&amp;callback=initAutoComplete"
async="" defer="" ></script>
<div id="bottom_nav"></div>

<script src="/react/bin/app.bundle.js" ></script>

</body>
</html>